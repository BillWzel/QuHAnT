# Simple program to run Quhant app forever
# -w option will restart app if any of the files change
# 
# Truly run this forever by typing:
#    ./start &
#
# To kill this you will need to list processes using ps command
#  Then kill all of the node and forever processes

echo '' > nohup.out

#pkill node
#pkill bash

Date=$(date)

nohup redis-server /opt/local/etc/redis.conf > Monitoring/redis.log 2>&1&
echo '{service: redis-server, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

sleep 1s

nohup bash manta-sync.sh > Monitoring/sync.log 2>&1&
echo '{service: manta-sync, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup bash quality-control.sh > Monitoring/quality.log 2>&1&
echo '{service: quality-control, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup bash storage-costs.sh > Monitoring/billStore.log 2>&1&
echo '{service: storage-costs, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

#nohup bash job-costs.sh > Monitoring/jobcosts.log 2>&1&
#echo '{service: job-costs, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup bash monitor_errors.sh > Monitoring/monitor_errors.log 2>&1&
echo '{service: monitor_errors, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup bash storage-estimate.sh > Monitoring/storage-estimate.log 2>&1&
echo '{service: storage-estimate, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup bash request-monitoring.sh > Monitoring/request-monitoring.log 2>&1&
echo '{service: request-monitoring.sh, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json

nohup ./node_modules/forever/bin/forever app.js > nohup.out 2>&1&
echo '{service: website, task_id: '$!', date: ' $Date'}' >> Monitoring/services.json
 
